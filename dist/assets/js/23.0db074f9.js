(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{129:function(t,e,s){"use strict";s.r(e);var i=s(2),c=Object(i.a)({},function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("computed是基于依赖进行缓存的。用通俗一点的话讲就是，计算属性的触发条件是他的依赖变化了才会重新执行,watch则是监听某一个值的变化,一旦这个值发生变化了,我们就可以触发一个回调来执行相应的事情")]),this._v(" "),e("p",[this._v("所以我觉得主要区别在于当我们有一些数据需要随着另外的一些数据变化时,我们就用computed,而我需要对某个值变化之后执行相应的业务逻辑的话,我们就用watch")]),this._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[this._v("computed如果是对象的情况下,它具有get和set方法\nwatch如果添加deep属性为true,那么就会进行深度监视,例如需要监视对象里面的属性的时候我们就需要使用它\nwatch还有immediate属性,它可以在监视的开始之后立刻执行对应的回调")])])])},[],!1,null,null,null);e.default=c.exports}}]);